import React, { useState } from 'react';
import { PromoCode } from '../store/useDepositStore';

type PromoAdminSectionProps = {
	promos: PromoCode[];
	getRandomPromo: () => PromoCode | null;
	issuePromo: (id: string) => PromoCode | null;
	showNotification: (message: string, type?: 'success' | 'error') => void;
};

const PromoAdminSection = ({ promos, getRandomPromo, issuePromo, showNotification }: PromoAdminSectionProps) => {
	const [lastGiven, setLastGiven] = useState<PromoCode | null>(null);

	const handleGiveRandom = () => {
		const promo = getRandomPromo();
		if (!promo) {
			showNotification('‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤', 'error');
			return;
		}
		const issued = issuePromo(promo.id);
		if (issued) {
			setLastGiven(issued);
			showNotification(`üéâ –í—ã–¥–∞–Ω: ${issued.code} ‚Äî ${issued.benefit.description}`);
		}
	};

	const handleIssueManually = (id: string) => {
		const issued = issuePromo(id);
		if (issued) {
			showNotification(`‚úÖ –í—ã–¥–∞–Ω: ${issued.code} ‚Äî ${issued.benefit.description}`);
		} else {
			showNotification('‚ùå –ü—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω', 'error');
		}
	};

	return (
		<div className="mt-6 p-4 bg-ctp-surface0 rounded-lg border border-ctp-overlay0/20">
			<h3 className="text-lg font-semibold text-ctp-text mb-3">üéüÔ∏è –ü—Ä–æ–º–æ–∫–æ–¥—ã</h3>

			<button
				onClick={handleGiveRandom}
				disabled={promos.filter((p) => !p.used).length === 0}
				className="mb-4 bg-ctp-peach hover:bg-ctp-peach/90 text-ctp-base px-5 py-2 rounded font-medium transition disabled:opacity-50">
				üé≤ –í—ã–¥–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π
			</button>

			{lastGiven && (
				<button
					onClick={() => {
						navigator.clipboard.writeText(lastGiven.code).then(
							() => showNotification(`‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ "${lastGiven.code}" —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!`, 'success'),
							() => showNotification('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å', 'error')
						);
					}}
					className="mb-4 p-3 bg-ctp-yellow/20 border border-ctp-yellow/50 rounded text-ctp-yellow text-sm text-left w-full hover:bg-ctp-yellow/30 transition cursor-pointer"
					aria-label={`–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ ${lastGiven.code}`}>
					–í—ã–¥–∞–Ω: <strong>{lastGiven.code}</strong> ‚Äî {lastGiven.benefit.description}
				</button>
			)}

			<div className="space-y-2">
				<h4 className="text-sm font-medium text-ctp-subtext0">–í—Å–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã:</h4>
				{promos.map((promo) => (
					<div
						key={promo.id}
						className={`p-2 rounded flex justify-between items-center text-sm ${
							promo.used ? 'bg-ctp-surface1 text-ctp-subtext0 line-through' : 'bg-ctp-surface2 text-ctp-text'
						}`}>
						<span>
							<strong>{promo.code}</strong> ‚Äî {promo.benefit.description}
						</span>
						{!promo.used && (
							<button onClick={() => handleIssueManually(promo.id)} className="text-ctp-red hover:text-ctp-red/80 text-xs">
								–í—ã–¥–∞—Ç—å
							</button>
						)}
					</div>
				))}
			</div>
		</div>
	);
};

export default React.memo(PromoAdminSection);
